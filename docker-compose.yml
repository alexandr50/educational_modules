version: '3'

services:
  db:
    image: postgres
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${USER_DB}
      POSTGRES_DB: ${NAME_DB}
      POSTGRES_PASSWORD: ${PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata

    volumes:

      - postgres_data:/var/lib/postgresql/data/pgdata
    ports:
      - '5432:5432'
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U postgres' ]
      interval: 5s
      timeout: 5s
      retries: 5


  app:
    build: .
    depends_on:
      db:
        condition: service_healthy
    ports:
      - '8000:8000'
    env_file:
      - .env
    volumes:
      - .:/code
#    restart: on-failure
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
#  app:
#    env_file:
#      - .env
#    build: .
#    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
#    ports:
#      - '8000:8000'
#    depends_on:
#      db:
#        condition: service_healthy
#    restart: on-failure
#    volumes:
#      - .:/application


volumes:
  postgres_data:
    driver: local
